openapi: 3.0.0
info:
  title: Claude Skills Interface
  description: Contract specifications for Claude Code skills
  version: 1.0.0

paths:
  /domain-classifier:
    post:
      summary: Classify feature into technology domain
      description: |
        Analyzes feature description, title, and context to determine
        the primary technology domain (Python, .NET, Node.js, Java, or Core).
      operationId: classifyDomain
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [feature_description]
              properties:
                feature_description:
                  type: string
                  description: Full feature description text
                feature_title:
                  type: string
                  description: Feature title (optional)
                confidence_threshold:
                  type: number
                  minimum: 0
                  maximum: 1
                  default: 0.7
                  description: Minimum confidence required
      responses:
        '200':
          description: Domain classified successfully
          content:
            application/json:
              schema:
                type: object
                required: [domain, confidence, rationale]
                properties:
                  domain:
                    type: string
                    enum: [python, dotnet, nodejs, java, core]
                  confidence:
                    type: number
                    minimum: 0
                    maximum: 1
                  rationale:
                    type: string
                    description: Explanation of classification
                  keywords_found:
                    type: array
                    items:
                      type: string
        '422':
          description: Unable to classify with confidence (ambiguous)

  /agent-migrator:
    post:
      summary: Migrate agent specification to spec-kit format
      description: |
        Converts existing agent specification to spec-kit-compatible format,
        adding required frontmatter fields while preserving content.
      operationId: migrateAgent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [agent_file]
              properties:
                agent_file:
                  type: string
                  description: Path to agent specification file
                spec_version:
                  type: string
                  default: "1.0"
                  description: Target spec version
                dry_run:
                  type: boolean
                  default: false
                  description: Preview changes without writing
      responses:
        '200':
          description: Agent migrated successfully
          content:
            application/json:
              schema:
                type: object
                required: [original_file, migrated_file, changes]
                properties:
                  original_file:
                    type: string
                  migrated_file:
                    type: string
                  changes:
                    type: array
                    items:
                      type: string
                  validation_status:
                    type: string
                    enum: [valid, warnings, errors]
        '404':
          description: Agent file not found
        '400':
          description: Agent file invalid or already migrated

  /contract-generator:
    post:
      summary: Generate API contracts from functional requirements
      description: |
        Creates OpenAPI/GraphQL schema from functional requirements in spec.md.
        Identifies entities, operations, and generates contract files.
      operationId: generateContracts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [spec_file]
              properties:
                spec_file:
                  type: string
                  description: Path to feature specification
                contract_type:
                  type: string
                  enum: [openapi, graphql, both]
                  default: openapi
                output_dir:
                  type: string
                  description: Directory for contract files
      responses:
        '200':
          description: Contracts generated successfully
          content:
            application/json:
              schema:
                type: object
                required: [contracts, entities, operations]
                properties:
                  contracts:
                    type: array
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                        type:
                          type: string
                        endpoints:
                          type: integer
                  entities:
                    type: array
                    items:
                      type: string
                  operations:
                    type: array
                    items:
                      type: string
        '404':
          description: Spec file not found
        '422':
          description: Insufficient requirements for contract generation

  /test-scaffold:
    post:
      summary: Generate test structure and boilerplate
      description: |
        Creates test files, directories, and boilerplate code based on
        test strategy and data model.
      operationId: scaffoldTests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [plan_file]
              properties:
                plan_file:
                  type: string
                  description: Path to implementation plan
                test_framework:
                  type: string
                  description: Testing framework (auto-detected from plan if omitted)
                coverage_target:
                  type: number
                  minimum: 0
                  maximum: 100
                  default: 80
      responses:
        '200':
          description: Test scaffold created successfully
          content:
            application/json:
              schema:
                type: object
                required: [test_files, framework]
                properties:
                  test_files:
                    type: array
                    items:
                      type: string
                  framework:
                    type: string
                  estimated_tests:
                    type: integer
        '404':
          description: Plan file not found

  /infra-initializer:
    post:
      summary: Scaffold infrastructure as code and monitoring
      description: |
        Generates Terraform configuration, Datadog monitoring setup,
        and deployment scripts based on plan requirements.
      operationId: initializeInfra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [plan_file]
              properties:
                plan_file:
                  type: string
                cloud_provider:
                  type: string
                  enum: [aws, azure, gcp, auto]
                  default: auto
                  description: Cloud provider (auto-detected if possible)
                monitoring:
                  type: boolean
                  default: true
                  description: Include Datadog monitoring config
                ci_cd:
                  type: boolean
                  default: true
                  description: Include CI/CD pipeline config
      responses:
        '200':
          description: Infrastructure scaffolded successfully
          content:
            application/json:
              schema:
                type: object
                required: [files_created]
                properties:
                  files_created:
                    type: array
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                        type:
                          type: string
                          enum: [terraform, monitoring, cicd]
                  cloud_provider:
                    type: string
                  estimated_cost:
                    type: string
                    description: Estimated monthly infrastructure cost
        '404':
          description: Plan file not found
        '422':
          description: Insufficient information to generate infrastructure

components:
  schemas:
    SkillError:
      type: object
      required: [error, message]
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error context

    SkillMetadata:
      type: object
      description: Standard metadata included in all skill responses
      required: [skill_name, version, execution_time]
      properties:
        skill_name:
          type: string
        version:
          type: string
          pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
        execution_time:
          type: number
          description: Execution time in seconds
        tools_used:
          type: array
          items:
            type: string
